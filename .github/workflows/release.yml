# Run when we create a new github release
---
on:
  release:
    types: [created]

name: Release process

defaults:
  run:
    shell: bash

jobs:
  create-debs:
    name: Create debian release
    strategy:
      fail-fast: false
      matrix:
        container:
          - ubuntu:14.04
          - ubuntu:16.04
          - ubuntu:18.04
          - ubuntu:20.04
          - debian:testing
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - name: Drop env for debugging
        run: |
          env
      - name: Enable source repositories
        run: sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list
      - name: Install pre-build packages
        run: |
            apt-get update
            apt-get install -y devscripts equivs git-buildpackage build-essential software-properties-common
        env:
          DEBIAN_FRONTEND: "noninteractive"
      # checkout action requires git to be installed and >= 2.18 or it gets weird
      - name: Install recent git
        run: |
              set -o allexport
              source /etc/os-release
              [[ $ID == ubuntu ]] && add-apt-repository --yes ppa:git-core/ppa
              apt-get update && apt-get install -y git
              git --version
        env:
          DEBIAN_FRONTEND: "noninteractive"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: source
      - name: Install build packages
        run: mk-build-deps --install
               --tool='apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes'
               debian/control
        working-directory: source
        env:
          DEBIAN_FRONTEND: "noninteractive"
      - name: Update the changelog
        run: |
            set -o allexport
            source /etc/os-release
            [[ $GITHUB_REF == *tags* ]] && VER_OPT="--new-version=${GITHUB_REF##*/}" #"
            gbp dch --auto --release $VER_OPT --distribution=$VERSION_CODENAME --spawn-editor=never --ignore-branch
            # 0.6.9 fails - trusty
            # 0.7.2 fails - xenial
            # 0.9.8 works - bionic
            # New version adds several options we don't use --dch-opt --upstream-branch --postedit
            # 0.9.3 made --auto the default
            # 0.8.18 "unmangle upstream_tag" - fixes KeyError fault
            # 0.8.1 add 'never' to --spawn-editor choices a6311e6  - I think it will work anyway

        working-directory: source
      - name: Build Debian package
        run: debuild --no-sign
        working-directory: source
      - name: Rename the output files
        run: |
            set -o allexport
            source /etc/os-release
            find . -maxdepth 1 -name 'crtime*' -type f -exec bash -c 'mv -v {} $(echo {} | sed "s/crtime/crtime-${VERSION_CODENAME}/")' \;
      - name: Upload the artifacts to the release
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: "crtime*"
